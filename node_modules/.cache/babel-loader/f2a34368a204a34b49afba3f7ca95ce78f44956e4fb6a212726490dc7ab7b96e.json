{"ast":null,"code":"var _jsxFileName = \"/Users/ipersonal/Desktop/peopleplanner/peopleplanner/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport styled from 'styled-components';\nimport './App.css';\nimport PersonList from './components/PersonList';\nimport HotelList from './components/HotelList';\n\n// Sample data with Romanian names - replace with your actual data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst samplePeople = [{\n  id: 'p1',\n  name: 'Ion Popescu'\n}, {\n  id: 'p2',\n  name: 'Maria Ionescu'\n}, {\n  id: 'p3',\n  name: 'Andrei Popa'\n}, {\n  id: 'p4',\n  name: 'Elena Dumitru'\n}, {\n  id: 'p5',\n  name: 'Mihai Stoica'\n}, {\n  id: 'p6',\n  name: 'Ana Constantinescu'\n}, {\n  id: 'p7',\n  name: 'Alexandru Diaconu'\n}, {\n  id: 'p8',\n  name: 'Cristina Moldovan'\n}, {\n  id: 'p9',\n  name: 'Bogdan Georgescu'\n}, {\n  id: 'p10',\n  name: 'Ioana Stancu'\n}, {\n  id: 'p11',\n  name: 'Florin Radu'\n}, {\n  id: 'p12',\n  name: 'Gabriela Munteanu'\n}, {\n  id: 'p13',\n  name: 'Radu Ștefănescu'\n}, {\n  id: 'p14',\n  name: 'Monica Vasilescu'\n}, {\n  id: 'p15',\n  name: 'Daniel Iliescu'\n}, {\n  id: 'p16',\n  name: 'Simona Toma'\n}, {\n  id: 'p17',\n  name: 'Adrian Marin'\n}, {\n  id: 'p18',\n  name: 'Ileana Cosma'\n}, {\n  id: 'p19',\n  name: 'George Dumitrescu'\n}, {\n  id: 'p20',\n  name: 'Alina Florescu'\n}, {\n  id: 'p21',\n  name: 'Victor Dragomir'\n}, {\n  id: 'p22',\n  name: 'Laura Manolache'\n}, {\n  id: 'p23',\n  name: 'Marius Niculescu'\n}, {\n  id: 'p24',\n  name: 'Diana Popovici'\n}];\n\n// Real accommodation data from user input - reordered as requested\nconst accommodations = [{\n  id: 'h1',\n  name: 'Pensiunea \"Casa Mari\"',\n  rooms: [...Array(2).fill().map((_, i) => ({\n    id: `casa-mari-double-${i + 1}`,\n    name: `Camera Dublă ${i + 1}`,\n    capacity: 2,\n    guests: []\n  })), ...Array(2).fill().map((_, i) => ({\n    id: `casa-mari-triple-${i + 1}`,\n    name: `Camera Triplă ${i + 1}`,\n    capacity: 3,\n    guests: []\n  }))]\n}, {\n  id: 'h2',\n  name: 'Pensiunea \"View\"',\n  rooms: [...Array(7).fill().map((_, i) => ({\n    id: `view-double-${i + 1}`,\n    name: `Camera Dublă ${i + 1}`,\n    capacity: 2,\n    guests: []\n  }))]\n}, {\n  id: 'h3',\n  name: 'Pensiunea \"Casa Făget\"',\n  rooms: [...Array(2).fill().map((_, i) => ({\n    id: `faget-double-${i + 1}`,\n    name: `Camera Dublă ${i + 1}`,\n    capacity: 2,\n    guests: []\n  })), ...Array(2).fill().map((_, i) => ({\n    id: `faget-triple-${i + 1}`,\n    name: `Camera Triplă ${i + 1}`,\n    capacity: 3,\n    guests: []\n  }))]\n}, {\n  id: 'h4',\n  name: 'Hotel \"Elania Resort\"',\n  rooms: [...Array(17).fill().map((_, i) => ({\n    id: `elania-double-${i + 1}`,\n    name: `Camera Dublă ${i + 1}`,\n    capacity: 2,\n    guests: []\n  })), ...Array(5).fill().map((_, i) => ({\n    id: `elania-twin-${i + 1}`,\n    name: `Camera Twin ${i + 1}`,\n    capacity: 2,\n    guests: []\n  }))]\n}];\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #faf6e9;\n  font-family: 'Montserrat', sans-serif;\n`;\n_c = AppContainer;\nconst Header = styled.header`\n  background: linear-gradient(135deg, #d4af37 0%, #f5d76e 100%);\n  color: #4a3900;\n  padding: 1.5rem;\n  text-align: center;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);\n`;\n_c2 = Header;\nconst HeaderTitle = styled.h1`\n  margin: 0;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 800;\n  letter-spacing: 1px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15);\n`;\n_c3 = HeaderTitle;\nconst MainContainer = styled.main`\n  display: flex;\n  flex: 1;\n  padding: 2rem;\n  gap: 2rem;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c4 = MainContainer;\nfunction App() {\n  _s();\n  const [hotels, setHotels] = useState(accommodations);\n  const [unassignedPeople, setUnassignedPeople] = useState(samplePeople);\n  const handleAssignPerson = useCallback((personId, roomId) => {\n    // Find the person\n    const person = unassignedPeople.find(p => p.id === personId);\n    if (!person) return;\n\n    // Remove from unassigned list\n    setUnassignedPeople(prev => prev.filter(p => p.id !== personId));\n\n    // Add to room\n    setHotels(prev => prev.map(hotel => {\n      // Check if the room belongs to this hotel\n      const roomIndex = hotel.rooms.findIndex(room => room.id === roomId);\n      if (roomIndex === -1) return hotel;\n\n      // Clone the hotel and its rooms\n      const updatedHotel = {\n        ...hotel,\n        rooms: [...hotel.rooms]\n      };\n      // Update the specific room\n      updatedHotel.rooms[roomIndex] = {\n        ...updatedHotel.rooms[roomIndex],\n        guests: [...updatedHotel.rooms[roomIndex].guests, person]\n      };\n      return updatedHotel;\n    }));\n  }, [unassignedPeople]);\n  const handleUnassignPerson = useCallback((personId, roomId) => {\n    // Find the hotel and room\n    let foundPerson = null;\n    setHotels(prev => prev.map(hotel => {\n      // Check if the room belongs to this hotel\n      const roomIndex = hotel.rooms.findIndex(room => room.id === roomId);\n      if (roomIndex === -1) return hotel;\n\n      // Find the person in the room\n      const room = hotel.rooms[roomIndex];\n      const personIndex = room.guests.findIndex(p => p.id === personId);\n      if (personIndex === -1) return hotel;\n\n      // Save reference to the person we're removing\n      foundPerson = room.guests[personIndex];\n\n      // Clone the hotel and its rooms\n      const updatedHotel = {\n        ...hotel,\n        rooms: [...hotel.rooms]\n      };\n      // Update the specific room to remove the person\n      updatedHotel.rooms[roomIndex] = {\n        ...room,\n        guests: room.guests.filter(p => p.id !== personId)\n      };\n      return updatedHotel;\n    }));\n\n    // Add the person back to unassigned list if we found them\n    if (foundPerson) {\n      setUnassignedPeople(prev => [...prev, foundPerson]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(HeaderTitle, {\n          children: \"Planificarea Camerelor pentru Nunt\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [/*#__PURE__*/_jsxDEV(PersonList, {\n          people: unassignedPeople\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HotelList, {\n          hotels: hotels,\n          onAssignPerson: handleAssignPerson,\n          onUnassignPerson: handleUnassignPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3+tyW1XjMAWf6s3lEDaCDyzt7bg=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"HeaderTitle\");\n$RefreshReg$(_c4, \"MainContainer\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","useCallback","DndProvider","HTML5Backend","styled","PersonList","HotelList","jsxDEV","_jsxDEV","samplePeople","id","name","accommodations","rooms","Array","fill","map","_","i","capacity","guests","AppContainer","div","_c","Header","header","_c2","HeaderTitle","h1","_c3","MainContainer","main","_c4","App","_s","hotels","setHotels","unassignedPeople","setUnassignedPeople","handleAssignPerson","personId","roomId","person","find","p","prev","filter","hotel","roomIndex","findIndex","room","updatedHotel","handleUnassignPerson","foundPerson","personIndex","backend","children","fileName","_jsxFileName","lineNumber","columnNumber","people","onAssignPerson","onUnassignPerson","_c5","$RefreshReg$"],"sources":["/Users/ipersonal/Desktop/peopleplanner/peopleplanner/src/App.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport styled from 'styled-components';\nimport './App.css';\nimport PersonList from './components/PersonList';\nimport HotelList from './components/HotelList';\n\n// Sample data with Romanian names - replace with your actual data\nconst samplePeople = [\n  { id: 'p1', name: 'Ion Popescu' },\n  { id: 'p2', name: 'Maria Ionescu' },\n  { id: 'p3', name: 'Andrei Popa' },\n  { id: 'p4', name: 'Elena Dumitru' },\n  { id: 'p5', name: 'Mihai Stoica' },\n  { id: 'p6', name: 'Ana Constantinescu' },\n  { id: 'p7', name: 'Alexandru Diaconu' },\n  { id: 'p8', name: 'Cristina Moldovan' },\n  { id: 'p9', name: 'Bogdan Georgescu' },\n  { id: 'p10', name: 'Ioana Stancu' },\n  { id: 'p11', name: 'Florin Radu' },\n  { id: 'p12', name: 'Gabriela Munteanu' },\n  { id: 'p13', name: 'Radu Ștefănescu' },\n  { id: 'p14', name: 'Monica Vasilescu' },\n  { id: 'p15', name: 'Daniel Iliescu' },\n  { id: 'p16', name: 'Simona Toma' },\n  { id: 'p17', name: 'Adrian Marin' },\n  { id: 'p18', name: 'Ileana Cosma' },\n  { id: 'p19', name: 'George Dumitrescu' },\n  { id: 'p20', name: 'Alina Florescu' },\n  { id: 'p21', name: 'Victor Dragomir' },\n  { id: 'p22', name: 'Laura Manolache' },\n  { id: 'p23', name: 'Marius Niculescu' },\n  { id: 'p24', name: 'Diana Popovici' },\n];\n\n// Real accommodation data from user input - reordered as requested\nconst accommodations = [\n  {\n    id: 'h1',\n    name: 'Pensiunea \"Casa Mari\"',\n    rooms: [\n      ...Array(2).fill().map((_, i) => ({\n        id: `casa-mari-double-${i+1}`,\n        name: `Camera Dublă ${i+1}`,\n        capacity: 2,\n        guests: []\n      })),\n      ...Array(2).fill().map((_, i) => ({\n        id: `casa-mari-triple-${i+1}`,\n        name: `Camera Triplă ${i+1}`,\n        capacity: 3,\n        guests: []\n      }))\n    ]\n  },\n  {\n    id: 'h2',\n    name: 'Pensiunea \"View\"',\n    rooms: [\n      ...Array(7).fill().map((_, i) => ({\n        id: `view-double-${i+1}`,\n        name: `Camera Dublă ${i+1}`,\n        capacity: 2,\n        guests: []\n      }))\n    ]\n  },\n  {\n    id: 'h3',\n    name: 'Pensiunea \"Casa Făget\"',\n    rooms: [\n      ...Array(2).fill().map((_, i) => ({\n        id: `faget-double-${i+1}`,\n        name: `Camera Dublă ${i+1}`,\n        capacity: 2,\n        guests: []\n      })),\n      ...Array(2).fill().map((_, i) => ({\n        id: `faget-triple-${i+1}`,\n        name: `Camera Triplă ${i+1}`,\n        capacity: 3,\n        guests: []\n      }))\n    ]\n  },\n  {\n    id: 'h4',\n    name: 'Hotel \"Elania Resort\"',\n    rooms: [\n      ...Array(17).fill().map((_, i) => ({\n        id: `elania-double-${i+1}`,\n        name: `Camera Dublă ${i+1}`,\n        capacity: 2,\n        guests: []\n      })),\n      ...Array(5).fill().map((_, i) => ({\n        id: `elania-twin-${i+1}`,\n        name: `Camera Twin ${i+1}`,\n        capacity: 2,\n        guests: []\n      }))\n    ]\n  }\n];\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #faf6e9;\n  font-family: 'Montserrat', sans-serif;\n`;\n\nconst Header = styled.header`\n  background: linear-gradient(135deg, #d4af37 0%, #f5d76e 100%);\n  color: #4a3900;\n  padding: 1.5rem;\n  text-align: center;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);\n`;\n\nconst HeaderTitle = styled.h1`\n  margin: 0;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 800;\n  letter-spacing: 1px;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15);\n`;\n\nconst MainContainer = styled.main`\n  display: flex;\n  flex: 1;\n  padding: 2rem;\n  gap: 2rem;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nfunction App() {\n  const [hotels, setHotels] = useState(accommodations);\n  const [unassignedPeople, setUnassignedPeople] = useState(samplePeople);\n\n  const handleAssignPerson = useCallback((personId, roomId) => {\n    // Find the person\n    const person = unassignedPeople.find(p => p.id === personId);\n    if (!person) return;\n\n    // Remove from unassigned list\n    setUnassignedPeople(prev => prev.filter(p => p.id !== personId));\n\n    // Add to room\n    setHotels(prev => prev.map(hotel => {\n      // Check if the room belongs to this hotel\n      const roomIndex = hotel.rooms.findIndex(room => room.id === roomId);\n      if (roomIndex === -1) return hotel;\n\n      // Clone the hotel and its rooms\n      const updatedHotel = { ...hotel, rooms: [...hotel.rooms] };\n      // Update the specific room\n      updatedHotel.rooms[roomIndex] = {\n        ...updatedHotel.rooms[roomIndex],\n        guests: [...updatedHotel.rooms[roomIndex].guests, person]\n      };\n\n      return updatedHotel;\n    }));\n  }, [unassignedPeople]);\n\n  const handleUnassignPerson = useCallback((personId, roomId) => {\n    // Find the hotel and room\n    let foundPerson = null;\n\n    setHotels(prev => prev.map(hotel => {\n      // Check if the room belongs to this hotel\n      const roomIndex = hotel.rooms.findIndex(room => room.id === roomId);\n      if (roomIndex === -1) return hotel;\n\n      // Find the person in the room\n      const room = hotel.rooms[roomIndex];\n      const personIndex = room.guests.findIndex(p => p.id === personId);\n      if (personIndex === -1) return hotel;\n\n      // Save reference to the person we're removing\n      foundPerson = room.guests[personIndex];\n\n      // Clone the hotel and its rooms\n      const updatedHotel = { ...hotel, rooms: [...hotel.rooms] };\n      // Update the specific room to remove the person\n      updatedHotel.rooms[roomIndex] = {\n        ...room,\n        guests: room.guests.filter(p => p.id !== personId)\n      };\n\n      return updatedHotel;\n    }));\n\n    // Add the person back to unassigned list if we found them\n    if (foundPerson) {\n      setUnassignedPeople(prev => [...prev, foundPerson]);\n    }\n  }, []);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <AppContainer>\n        <Header>\n          <HeaderTitle>Planificarea Camerelor pentru Nuntă</HeaderTitle>\n        </Header>\n        <MainContainer>\n          <PersonList \n            people={unassignedPeople} \n          />\n          <HotelList \n            hotels={hotels} \n            onAssignPerson={handleAssignPerson}\n            onUnassignPerson={handleUnassignPerson}\n          />\n        </MainContainer>\n      </AppContainer>\n    </DndProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAc,CAAC,EACjC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAgB,CAAC,EACnC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAc,CAAC,EACjC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAgB,CAAC,EACnC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAe,CAAC,EAClC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAqB,CAAC,EACxC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAoB,CAAC,EACvC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAoB,CAAC,EACvC;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAmB,CAAC,EACtC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAe,CAAC,EACnC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAc,CAAC,EAClC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAoB,CAAC,EACxC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAkB,CAAC,EACtC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAmB,CAAC,EACvC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAiB,CAAC,EACrC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAc,CAAC,EAClC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAe,CAAC,EACnC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAe,CAAC,EACnC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAoB,CAAC,EACxC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAiB,CAAC,EACrC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAkB,CAAC,EACtC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAkB,CAAC,EACtC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAmB,CAAC,EACvC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAiB,CAAC,CACtC;;AAED;AACA,MAAMC,cAAc,GAAG,CACrB;EACEF,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,uBAAuB;EAC7BE,KAAK,EAAE,CACL,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAChCR,EAAE,EAAE,oBAAoBQ,CAAC,GAAC,CAAC,EAAE;IAC7BP,IAAI,EAAE,gBAAgBO,CAAC,GAAC,CAAC,EAAE;IAC3BC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC,EACH,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAChCR,EAAE,EAAE,oBAAoBQ,CAAC,GAAC,CAAC,EAAE;IAC7BP,IAAI,EAAE,iBAAiBO,CAAC,GAAC,CAAC,EAAE;IAC5BC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;AAEP,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,kBAAkB;EACxBE,KAAK,EAAE,CACL,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAChCR,EAAE,EAAE,eAAeQ,CAAC,GAAC,CAAC,EAAE;IACxBP,IAAI,EAAE,gBAAgBO,CAAC,GAAC,CAAC,EAAE;IAC3BC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;AAEP,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,wBAAwB;EAC9BE,KAAK,EAAE,CACL,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAChCR,EAAE,EAAE,gBAAgBQ,CAAC,GAAC,CAAC,EAAE;IACzBP,IAAI,EAAE,gBAAgBO,CAAC,GAAC,CAAC,EAAE;IAC3BC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC,EACH,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAChCR,EAAE,EAAE,gBAAgBQ,CAAC,GAAC,CAAC,EAAE;IACzBP,IAAI,EAAE,iBAAiBO,CAAC,GAAC,CAAC,EAAE;IAC5BC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;AAEP,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,uBAAuB;EAC7BE,KAAK,EAAE,CACL,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IACjCR,EAAE,EAAE,iBAAiBQ,CAAC,GAAC,CAAC,EAAE;IAC1BP,IAAI,EAAE,gBAAgBO,CAAC,GAAC,CAAC,EAAE;IAC3BC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC,EACH,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAChCR,EAAE,EAAE,eAAeQ,CAAC,GAAC,CAAC,EAAE;IACxBP,IAAI,EAAE,eAAeO,CAAC,GAAC,CAAC,EAAE;IAC1BC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;AAEP,CAAC,CACF;AAED,MAAMC,YAAY,GAAGjB,MAAM,CAACkB,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,YAAY;AAQlB,MAAMG,MAAM,GAAGpB,MAAM,CAACqB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,MAAM;AAQZ,MAAMG,WAAW,GAAGvB,MAAM,CAACwB,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,WAAW;AAQjB,MAAMG,aAAa,GAAG1B,MAAM,CAAC2B,IAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIF,aAAa;AAYnB,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpC,QAAQ,CAACY,cAAc,CAAC;EACpD,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtC,QAAQ,CAACS,YAAY,CAAC;EAEtE,MAAM8B,kBAAkB,GAAGtC,WAAW,CAAC,CAACuC,QAAQ,EAAEC,MAAM,KAAK;IAC3D;IACA,MAAMC,MAAM,GAAGL,gBAAgB,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAK8B,QAAQ,CAAC;IAC5D,IAAI,CAACE,MAAM,EAAE;;IAEb;IACAJ,mBAAmB,CAACO,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACF,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAK8B,QAAQ,CAAC,CAAC;;IAEhE;IACAJ,SAAS,CAACS,IAAI,IAAIA,IAAI,CAAC7B,GAAG,CAAC+B,KAAK,IAAI;MAClC;MACA,MAAMC,SAAS,GAAGD,KAAK,CAAClC,KAAK,CAACoC,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACxC,EAAE,KAAK+B,MAAM,CAAC;MACnE,IAAIO,SAAS,KAAK,CAAC,CAAC,EAAE,OAAOD,KAAK;;MAElC;MACA,MAAMI,YAAY,GAAG;QAAE,GAAGJ,KAAK;QAAElC,KAAK,EAAE,CAAC,GAAGkC,KAAK,CAAClC,KAAK;MAAE,CAAC;MAC1D;MACAsC,YAAY,CAACtC,KAAK,CAACmC,SAAS,CAAC,GAAG;QAC9B,GAAGG,YAAY,CAACtC,KAAK,CAACmC,SAAS,CAAC;QAChC5B,MAAM,EAAE,CAAC,GAAG+B,YAAY,CAACtC,KAAK,CAACmC,SAAS,CAAC,CAAC5B,MAAM,EAAEsB,MAAM;MAC1D,CAAC;MAED,OAAOS,YAAY;IACrB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACd,gBAAgB,CAAC,CAAC;EAEtB,MAAMe,oBAAoB,GAAGnD,WAAW,CAAC,CAACuC,QAAQ,EAAEC,MAAM,KAAK;IAC7D;IACA,IAAIY,WAAW,GAAG,IAAI;IAEtBjB,SAAS,CAACS,IAAI,IAAIA,IAAI,CAAC7B,GAAG,CAAC+B,KAAK,IAAI;MAClC;MACA,MAAMC,SAAS,GAAGD,KAAK,CAAClC,KAAK,CAACoC,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACxC,EAAE,KAAK+B,MAAM,CAAC;MACnE,IAAIO,SAAS,KAAK,CAAC,CAAC,EAAE,OAAOD,KAAK;;MAElC;MACA,MAAMG,IAAI,GAAGH,KAAK,CAAClC,KAAK,CAACmC,SAAS,CAAC;MACnC,MAAMM,WAAW,GAAGJ,IAAI,CAAC9B,MAAM,CAAC6B,SAAS,CAACL,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAK8B,QAAQ,CAAC;MACjE,IAAIc,WAAW,KAAK,CAAC,CAAC,EAAE,OAAOP,KAAK;;MAEpC;MACAM,WAAW,GAAGH,IAAI,CAAC9B,MAAM,CAACkC,WAAW,CAAC;;MAEtC;MACA,MAAMH,YAAY,GAAG;QAAE,GAAGJ,KAAK;QAAElC,KAAK,EAAE,CAAC,GAAGkC,KAAK,CAAClC,KAAK;MAAE,CAAC;MAC1D;MACAsC,YAAY,CAACtC,KAAK,CAACmC,SAAS,CAAC,GAAG;QAC9B,GAAGE,IAAI;QACP9B,MAAM,EAAE8B,IAAI,CAAC9B,MAAM,CAAC0B,MAAM,CAACF,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAK8B,QAAQ;MACnD,CAAC;MAED,OAAOW,YAAY;IACrB,CAAC,CAAC,CAAC;;IAEH;IACA,IAAIE,WAAW,EAAE;MACff,mBAAmB,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEQ,WAAW,CAAC,CAAC;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7C,OAAA,CAACN,WAAW;IAACqD,OAAO,EAAEpD,YAAa;IAAAqD,QAAA,eACjChD,OAAA,CAACa,YAAY;MAAAmC,QAAA,gBACXhD,OAAA,CAACgB,MAAM;QAAAgC,QAAA,eACLhD,OAAA,CAACmB,WAAW;UAAA6B,QAAA,EAAC;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACTpD,OAAA,CAACsB,aAAa;QAAA0B,QAAA,gBACZhD,OAAA,CAACH,UAAU;UACTwD,MAAM,EAAExB;QAAiB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFpD,OAAA,CAACF,SAAS;UACR6B,MAAM,EAAEA,MAAO;UACf2B,cAAc,EAAEvB,kBAAmB;UACnCwB,gBAAgB,EAAEX;QAAqB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAElB;AAAC1B,EAAA,CAnFQD,GAAG;AAAA+B,GAAA,GAAH/B,GAAG;AAqFZ,eAAeA,GAAG;AAAC,IAAAV,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAgC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAvC,GAAA;AAAAuC,YAAA,CAAApC,GAAA;AAAAoC,YAAA,CAAAjC,GAAA;AAAAiC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}